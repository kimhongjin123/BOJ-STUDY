# README - BOJ 2775 (부녀회장이 될테야)

## 문제 설명
백준 온라인 저지 2775번 문제 "부녀회장이 될테야"는 주어진 층수와 호수를 기반으로 아파트에 사는 사람 수를 계산하는 문제입니다.  

- 0층 i호에는 i명이 산다.
- k층 n호에 사는 사람 수는 `(k-1)층 1호부터 n호까지의 합`이다.
- 여러 개의 테스트 케이스가 주어지며, 각 테스트 케이스마다 k층 n호에 사는 사람 수를 출력해야 한다.

---

## 기존 코드의 문제점

### 1. 불필요한 리스트 사용
- `floor`, `room` 리스트를 사용하여 입력값을 저장했지만, 이는 불필요함.
- 반복 횟수가 정해져 있으므로 변수 두 개(`f`, `r`)만 사용해도 충분함.

### 2. 배열 크기의 비효율성
- `people[15][15]`를 생성하여 미리 값을 계산했지만, 문제의 범위를 고려하지 않음.
- 실제 필요한 범위를 확인하고 그에 맞게 설정하는 것이 더 적절함.

### 3. 비효율적인 입력 방식
- `input()`을 여러 번 호출하여 입력을 처리했는데, 이는 속도를 저하시킴.
- `sys.stdin.read()`를 사용하면 여러 줄 입력을 한 번에 받아와 처리할 수 있어 더 빠름.

---

## 개선된 코드
```python
import sys

# 미리 아파트 값을 계산 (0층부터 14층까지, 1호부터 14호까지)
people = [[0] * 15 for _ in range(15)]

# 0층 초기화 (i호에는 i명이 산다)
for i in range(1, 15):
    people[0][i] = i

# DP 방식으로 모든 층의 사람 수 미리 계산
for i in range(1, 15):
    for j in range(1, 15):
        people[i][j] = people[i][j - 1] + people[i - 1][j]

# 입력 처리 (빠른 입력 사용)
input_data = sys.stdin.read().split()
repeat = int(input_data[0])
index = 1

for _ in range(repeat):
    f = int(input_data[index])  # 층 수
    r = int(input_data[index + 1])  # 호 수
    index += 2
    print(people[f][r])
```

---

## 개선된 코드의 장점

### ✅ 1. 불필요한 리스트 제거
- `floor`, `room` 리스트를 없애고 변수 `f`, `r`을 사용하여 메모리 절약 📉

### ✅ 2. 빠른 입력 처리
- `sys.stdin.read()`를 사용하여 여러 줄 입력을 빠르게 처리해 실행 속도를 개선 🚀

### ✅ 3. DP 방식으로 중복 계산 방지
- `people` 배열을 미리 계산하여 각 테스트 케이스마다 중복 계산을 피함 ⚡

이렇게 개선하면 실행 속도가 빠르고, 메모리 사용량도 줄어들어 최적화된 풀이가 됩니다. 😃

